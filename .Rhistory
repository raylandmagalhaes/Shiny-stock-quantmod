install.packages("quantmod")
# install.packages("quantmod")
library(quantmod)
maxDate <- "2016-01-03"
amazon <- na.omit(getSymbols.google('AMZN', from=maxDate , auto.assign = F) [,4])
maxDate <- "20016-01-03"
amazon <- na.omit(getSymbols.google('AMZN', from=maxDate , auto.assign = F) [,4])
amazon <- na.omit(getSymbols.google('AMZN', from=maxDate , auto.assign = F,src = "yahoo") [,4])
amazon <- na.omit(getSymbols.google('AMZN', from=maxDate , auto.assign = F) [,4],src = "yahoo")
amazon <- na.omit(getSymbols('AMZN', from=maxDate , auto.assign = F) [,4])
maxDate <- "2016-01-03"
amazon <- na.omit(getSymbols('AMZN', from=maxDate , auto.assign = F) [,4])
amazon
amazonMnthlyReturn <- periodReturn(AMZN, period="monthly", type='log')
amazonMnthlyReturn <- periodReturn("AMZN", period="monthly", type='log')
amazonMnthlyReturn <- periodReturn("AMZN", period="monthly", type='log')
amazonMnthlyReturn <- periodReturn(amazon, period="monthly", type='log')
amazonMnthlyReturn
#Examine Returns for Only 2014
monthlyReturn2014 = periodReturn(AMZN,period="monthly",subset='2016')
#Examine Returns for Only 2014
monthlyReturn2016 = periodReturn(amazon,period="monthly",subset='2016')
monthlyReturn2016
chartSeries(amazon)
#add techinical indicators, single and
chartSeries(amazon, TA="addSMI()")
#add techinical indicators, single and
chartSeries(amazon, TA="addSMI()")
chartSeries(amazon, theme="white", TA="addVo();addBBands();addRSI()")
addTA()
addTA
#add techinical indicators, single and
chartSeries(amazon,TA="addVo();addBBands();addCCI()")
chartSeries(amazon, theme="white", TA="addVo();addBBands();addRSI()")
#add techinical indicators, single and
chartSeries(amazon, TA="addSMI()")
#add techinical indicators, single and
chartSeries(amazon, TA="addTRIX()")
#add techinical indicators, single and
chartSeries(amazon, TA="addEMA()")
install.packages("shinydashboard")
shiny::runApp()
runApp()
showSymbols(env=parent.frame())
stockSymbols()
library(quantmod)  # also loads xts and TTR
# Fetch all Symbols & store only the tickers to retrieve the data
symbols <- stockSymbols()
symbols <- symbols[,1]
symbols
unique(symbols)
symbols
unique(symbols)
symbols <- stockSymbols()[,1]
symbols
symbols <- unique(stockSymbols()[,1])
runApp()
amazon <- na.omit(getSymbols('AMZN' , auto.assign = F) [,4])
amazon
runApp()
maxDate <- "2016-01-03"
amazon <- na.omit(getSymbols('AMZN', from=maxDate , auto.assign = F) [,4])
amazon
runApp()
minDate <- "2016-09-03"
amazon <- na.omit(getSymbols('AMZN', from=maxDate ,to=minDate , auto.assign = F) [,4])
amazon <- na.omit(getSymbols('AMZN', from=maxDate ,to=minDate , auto.assign = F) [,4])
runApp()
chartSeries(amazon)
runApp()
runApp()
chartSeries(amazon)
type = c("auto", "candlesticks", "matchsticks", "bars","line")
Welles Wilder's Directional Movement Indicator	ADX	addADX
Average True Range	ATR	addATR
Bollinger Bands	BBands	addBBands
Bollinger Band Width	N/A	addBBands
Bollinger %b	N/A	addBBands
Commodity Channel Index	CCI	addCCI
Chaiken Money Flow	CMF	addCMF
Chande Momentum Oscillator	CMO	addCMO
Double Exponential Moving Average	DEMA	addDEMA
Detrended Price Oscillator	DPO	addDPO
Exponential Moving Average	EMA	addEMA
Price Envelope	N/A	addEnvelope
Exponential Volume Weigthed Moving Average	EVWMA	addEVWMA
Options and Futures Expiration	N/A	addExpiry
Moving Average Convergence Divergence	MACD	addMACD
Momentum	momentum	addMomentum
Rate of Change	ROC	addROC
Relative Strength Indicator	RSI	addRSI
Parabolic Stop and Reverse	SAR	addSAR
Simple Moving Average	SMA	addSMA
Stocastic Momentum Index	SMI	addSMI
Triple Smoothed Exponential Oscillator	TRIX	addTRIX
Volume	N/A	addVo
Weighted Moving Average	WMA	addWMA
Williams %R	WPR	addWPR
ZLEMA	ZLEMA	addZLEMA
library(XML)
Welles Wilder's Directional Movement Indicator	ADX	addADX
Average True Range	ATR	addATR
Bollinger Bands	BBands	addBBands
Bollinger Band Width	N/A	addBBands
Bollinger %b	N/A	addBBands
Commodity Channel Index	CCI	addCCI
Chaiken Money Flow	CMF	addCMF
Chande Momentum Oscillator	CMO	addCMO
Double Exponential Moving Average	DEMA	addDEMA
Detrended Price Oscillator	DPO	addDPO
Exponential Moving Average	EMA	addEMA
Price Envelope	N/A	addEnvelope
Exponential Volume Weigthed Moving Average	EVWMA	addEVWMA
Options and Futures Expiration	N/A	addExpiry
Moving Average Convergence Divergence	MACD	addMACD
Momentum	momentum	addMomentum
Rate of Change	ROC	addROC
Relative Strength Indicator	RSI	addRSI
Parabolic Stop and Reverse	SAR	addSAR
Simple Moving Average	SMA	addSMA
Stocastic Momentum Index	SMI	addSMI
Triple Smoothed Exponential Oscillator	TRIX	addTRIX
Volume	N/A	addVo
Weighted Moving Average	WMA	addWMA
Williams %R	WPR	addWPR
ZLEMA	ZLEMA	addZLEMA
library(XML)
tabela ="https://www.quantmod.com/examples/charting/"
Welles Wilder's Directional Movement Indicator	ADX	addADX
Average True Range	ATR	addATR
Bollinger Bands	BBands	addBBands
Bollinger Band Width	N/A	addBBands
Bollinger %b	N/A	addBBands
Commodity Channel Index	CCI	addCCI
Chaiken Money Flow	CMF	addCMF
Chande Momentum Oscillator	CMO	addCMO
Double Exponential Moving Average	DEMA	addDEMA
Detrended Price Oscillator	DPO	addDPO
Exponential Moving Average	EMA	addEMA
Price Envelope	N/A	addEnvelope
Exponential Volume Weigthed Moving Average	EVWMA	addEVWMA
Options and Futures Expiration	N/A	addExpiry
Moving Average Convergence Divergence	MACD	addMACD
Momentum	momentum	addMomentum
Rate of Change	ROC	addROC
Relative Strength Indicator	RSI	addRSI
Parabolic Stop and Reverse	SAR	addSAR
Simple Moving Average	SMA	addSMA
Stocastic Momentum Index	SMI	addSMI
Triple Smoothed Exponential Oscillator	TRIX	addTRIX
Volume	N/A	addVo
Weighted Moving Average	WMA	addWMA
Williams %R	WPR	addWPR
ZLEMA	ZLEMA	addZLEMA
library(XML)
tabela ="https://www.quantmod.com/examples/charting/"
table = readHTMLTable(tabela, header=T, which=1,stringsAsFactors=F)
Welles Wilder's Directional Movement Indicator	ADX	addADX
Average True Range	ATR	addATR
Bollinger Bands	BBands	addBBands
Bollinger Band Width	N/A	addBBands
Bollinger %b	N/A	addBBands
Commodity Channel Index	CCI	addCCI
Chaiken Money Flow	CMF	addCMF
Chande Momentum Oscillator	CMO	addCMO
Double Exponential Moving Average	DEMA	addDEMA
Detrended Price Oscillator	DPO	addDPO
Exponential Moving Average	EMA	addEMA
Price Envelope	N/A	addEnvelope
Exponential Volume Weigthed Moving Average	EVWMA	addEVWMA
Options and Futures Expiration	N/A	addExpiry
Moving Average Convergence Divergence	MACD	addMACD
Momentum	momentum	addMomentum
Rate of Change	ROC	addROC
Relative Strength Indicator	RSI	addRSI
Parabolic Stop and Reverse	SAR	addSAR
Simple Moving Average	SMA	addSMA
Stocastic Momentum Index	SMI	addSMI
Triple Smoothed Exponential Oscillator	TRIX	addTRIX
Volume	N/A	addVo
Weighted Moving Average	WMA	addWMA
Williams %R	WPR	addWPR
ZLEMA	ZLEMA	addZLEMA
library(XML)
tabela ="https://www.quantmod.com/examples/charting/"
table = readHTMLTable(tabela, header=T, which=1,stringsAsFactors=F)
Welles Wilder's Directional Movement Indicator	ADX	addADX
Average True Range	ATR	addATR
Bollinger Bands	BBands	addBBands
Bollinger Band Width	N/A	addBBands
Bollinger %b	N/A	addBBands
Commodity Channel Index	CCI	addCCI
Chaiken Money Flow	CMF	addCMF
Chande Momentum Oscillator	CMO	addCMO
Double Exponential Moving Average	DEMA	addDEMA
Detrended Price Oscillator	DPO	addDPO
Exponential Moving Average	EMA	addEMA
Price Envelope	N/A	addEnvelope
Exponential Volume Weigthed Moving Average	EVWMA	addEVWMA
Options and Futures Expiration	N/A	addExpiry
Moving Average Convergence Divergence	MACD	addMACD
Momentum	momentum	addMomentum
Rate of Change	ROC	addROC
Relative Strength Indicator	RSI	addRSI
Parabolic Stop and Reverse	SAR	addSAR
Simple Moving Average	SMA	addSMA
Stocastic Momentum Index	SMI	addSMI
Triple Smoothed Exponential Oscillator	TRIX	addTRIX
Volume	N/A	addVo
Weighted Moving Average	WMA	addWMA
Williams %R	WPR	addWPR
ZLEMA	ZLEMA	addZLEMA
library(XML)
tabela ="https://www.quantmod.com/examples/charting/"
table = readHTMLTable(tabela, header=T, which=1,stringsAsFactors=F)
library(XML)
tabela ="https://www.quantmod.com/examples/charting/"
table = readHTMLTable(tabela, header=T, which=1,stringsAsFactors=F)
table = readHTMLTable(tabela, header=T, which=2,stringsAsFactors=F)
table = readHTMLTable(tabela, header=T, which=3,stringsAsFactors=F)
table = readHTMLTable(tabela, header=T, which=4,stringsAsFactors=F)
table = readHTMLTable(tabela, header=T, which=5,stringsAsFactors=F)
table = readHTMLTable(tabela, header=T,stringsAsFactors=F)
>
library(rvest)
install.packages(xml2)
install.packages("xml2")
install.packages("xml2")
library(xml2)
webpage_url <- "https://www.quantmod.com/examples/charting/"
webpage <- xml2::read_html(webpage_url)
ExOffndrsRaw <- rvest::html_table(webpage)[[1]] %>%
tibble::as_tibble(.name_repair = "unique") # repair the repeated columns
ExOffndrsRaw
ExOffndrsRaw %>% dplyr::glimpse(45)
ExOffndrsRaw <- rvest::html_table(webpage)[[1]] %>%
tibble::as_tibble(.name_repair = "unique") %>%  # repair the repeated columns
select(quantmod Name)
ExOffndrsRaw <- rvest::html_table(webpage)[[1]] %>%
tibble::as_tibble(.name_repair = "unique") %>%  # repair the repeated columns
select(`quantmod Name`)
ExOffndrsRaw
TA <- rvest::html_table(webpage)[[1]] %>%
tibble::as_tibble(.name_repair = "unique") %>%  # repair the repeated columns
select(`quantmod Name`)
paste(TA,"()",sep = "")
paste0(TA,"()",sep = "")
TA
apply(TA, paste("()",sep = ""))
paste0(TA,"()",sep = "")
paste0(TA,"()",sep = "",collapse = "\")
paste0(TA,"()",sep = "",collapse = "\")
paste0(TA,"()",sep = "",collapse = "\")
paste0(TA,"()",sep = "",collapse ="/")
paste0(TA,"()",sep = "",collapse ="\")
paste0(TA,"()",sep = "",collapse ="\\")
paste0(TA,"()",sep = "",collapse ="\\")
gsub("$","()",TA)
TA
TA <- rvest::html_table(webpage)[[1]] %>%
tibble::as_tibble(.name_repair = "unique") %>%  # repair the repeated columns
select(`quantmod Name`) %>% pull
gsub("$","()",TA)
ta=gsub("$","()",TA)
save(ta,"ta")
save(ta,file="ta")
load("ta")
runApp()
chartSeries(amazon,type="candlesticks", theme="white", TA="addVo();addBBands();addRSI()")
chartSeries(amazon,type="candlesticks", theme="white", TA="addVo();addBBands();addRSI()")
chartSeries(amazon, theme="white", TA="addVo();addBBands();addRSI()")
save(ta,file="ta")
runApp()
runApp()
shiny::runApp()
